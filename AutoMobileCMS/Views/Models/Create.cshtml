@model AutoMobileCMS.Models.ModelsViewModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="content-wrapper">
    <section class="content-header">
        <h1>
            Create Models
        </h1>
    </section>
    <section class="content">
        <div class="row">
              <div class="col-md-12">
                <div class="box box-primary">
                    <div class="box-header with-border">
                    </div>
                    @using (Html.BeginForm("Create", "Models", FormMethod.Post, new { enctype = "multipart/form-data", @class = "form-horizontal" }))
                    {
                        @Html.AntiForgeryToken()

                        <div class="box-body">

                
                            <div class="col-xs-12 col-sm-12 col-md-6 col-lg-6">
                                <hr />
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })


                                @*<div class="form-group">
                                    <div class="col-xs-12 col-sm-3 col-md-3 col-lg-3">
                                        @Html.LabelFor(model => model.ModelID, htmlAttributes: new { @class = "control-label col-md-2" })
                                    </div>
                                    <div class="col-xs-12 col-sm-9 col-md-9 col-lg-9 ui input">
                                        @Html.EditorFor(model => model.ModelID, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.ModelID, "", new { @class = "text-danger" })
                                    </div>
                                    </div>*@


                                <div class="form-group">
                                    <div class="col-xs-12 col-sm-3 col-md-3 col-lg-3">
                                        @Html.LabelFor(model => model.ModelName, htmlAttributes: new { @class = "control-label col-md-2" })
                                    </div>
                                    <div class="col-xs-12 col-sm-9 col-md-9 col-lg-9 ui input">
                                        @Html.EditorFor(model => model.ModelName, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.ModelName, "", new { @class = "text-danger" })
                                    </div>
                                </div>


                                <div class="form-group">
                                    <div class="col-xs-12 col-sm-3 col-md-3 col-lg-3">
                                        @Html.LabelFor(model => model.ModelOverview, htmlAttributes: new { @class = "control-label col-md-2" })
                                    </div>
                                    <div class="col-xs-12 col-sm-9 col-md-9 col-lg-9 ui input">
                                        @Html.TextAreaFor(model => model.ModelOverview, 5, 58, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.ModelOverview, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    <div class="col-xs-12 col-sm-3 col-md-3 col-lg-3">
                                        @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                                    </div>
                                    <div class="col-xs-12 col-sm-9 col-md-9 col-lg-9 ui input">
                                        @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                                    </div>
                                </div>



                                <div class="form-group">
                                    <div class="col-xs-12 col-sm-3 col-md-3 col-lg-3">
                                        @Html.LabelFor(model => model.BrandID, htmlAttributes: new { @class = "control-label col-md-2" })
                                    </div>
                                    <div class="col-xs-12 col-sm-9 col-md-9 col-lg-9 ui input">
                                       @Html.DropDownListFor(model => model.BrandID, TempData["brands"] as List<SelectListItem>, "SELECT Brand", new { @class = "form-control", @Id = "ddlbrand" })
                                        @Html.ValidationMessageFor(model => model.BrandID, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    <div class="col-xs-12 col-sm-3 col-md-3 col-lg-3">
                                        @Html.LabelFor(model => model.DateofPurchase, htmlAttributes: new { @class = "control-label col-md-2" })
                                    </div>
                                    <div class="col-xs-12 col-sm-9 col-md-9 col-lg-9 ui input">
                                        @Html.EditorFor(model => model.DateofPurchase, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.DateofPurchase, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    <div class="col-xs-12 col-sm-3 col-md-3 col-lg-3">
                                        @Html.LabelFor(model => model.KMDriven, htmlAttributes: new { @class = "control-label col-md-2" })
                                    </div>
                                    <div class="col-xs-12 col-sm-9 col-md-9 col-lg-9 ui input">
                                        @Html.EditorFor(model => model.KMDriven, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.KMDriven, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                @*<div class="form-group">
                                    <div class="col-xs-12 col-sm-3 col-md-3 col-lg-3">
                                        @Html.LabelFor(model => model.CompanyID, htmlAttributes: new { @class = "control-label col-md-2" })
                                    </div>
                                    <div class="col-xs-12 col-sm-9 col-md-9 col-lg-9 ui input">
                                        @Html.EditorFor(model => model.CompanyID, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.CompanyID, "", new { @class = "text-danger" })
                                    </div>
                                    </div>*@



                                <div class="form-group">
                                    <div class="col-md-offset-2 col-md-10">
                                        <input type="submit" value="Create" class="btn btn-primary" />
                                        <input type="submit" value="Next"  class="btn btn-primary" />
                                    </div> 
                                </div>


                            </div>
                            <div class="col-xs-12 col-sm-12 col-md-6 col-lg-6">
                                <div class="form-group">
                                    <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                                        <div class="col-xs-12 col-sm-12 col-md-6 col-lg-6">
                                            <div class="col-xs-12 col-sm-2 col-md-2 col-lg-2">
                                                @Html.LabelFor(model => model.ImagePath1, htmlAttributes: new { @class = "control-label col-md-2" })
                                            </div>
                                            <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                                                <img id="img1" src="" alt="your image" class="img-thumbnail col-md-12" style="height:250px" />
                                                <input type="file" value="Upload" id="imgupload1" name="imgupload1" onchange="readURL(this, 'img1')" class="btn btn-primary col-md-7" />
                                                <input type="button" id="btnimg1cencal" onclick="removeimg('img1','imgupload1')" value="Cancel" class="btn btn-danger col-md-4 pull-right" />
                                            </div>
                                        </div>
                                        <div class="col-xs-12 col-sm-12 col-md-6 col-lg-6">
                                            <div class="col-xs-12 col-sm-2 col-md-2 col-lg-2">
                                                @Html.LabelFor(model => model.ImagePath2, htmlAttributes: new { @class = "control-label col-md-2" })
                                            </div>
                                            <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                                                <img id="img2" src="" alt="your image" class="img-thumbnail col-md-12" style="height:250px" />
                                                <input type="file" value="Upload" id="imgupload2" name="imgupload2" onchange="readURL(this,'img2');" class="btn btn-primary col-md-7" />
                                                <input type="button" id="btnimg2cencal" onclick="removeimg('img2','imgupload2')" value="Cancel" class="btn btn-danger col-md-4 pull-right" />
                                            </div>
                                        </div>
                                    </div>
                                </div>



                                <div class="form-group">
                                    <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                                        <div class="col-xs-12 col-sm-12 col-md-6 col-lg-6">
                                            <div class="col-xs-12 col-sm-2 col-md-2 col-lg-2">
                                                @Html.LabelFor(model => model.ImagePath1, htmlAttributes: new { @class = "control-label col-md-2" })
                                            </div>
                                            <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                                                <img id="img3" src="" alt="your image" class="img-thumbnail col-md-12" style="height:200px" />
                                                <input type="file" value="Upload" id="imgupload3" name="imgupload3" onchange="readURL(this, 'img3')" class="btn btn-primary col-md-7" />
                                                <input type="button" id="btnimg3cencal" onclick="removeimg('img3','imgupload3')" value="Cancel" class="btn btn-danger col-md-4 pull-right" />
                                            </div>
                                        </div>
                                        <div class="col-xs-12 col-sm-12 col-md-6 col-lg-6">
                                            <div class="col-xs-12 col-sm-2 col-md-2 col-lg-2">
                                                @Html.LabelFor(model => model.ImagePath2, htmlAttributes: new { @class = "control-label col-md-2" })
                                            </div>
                                            <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                                                <img id="img4" src="" alt="your image" class="img-thumbnail col-md-12" style="height:200px" />
                                                <input type="file" value="Upload" id="imgupload4" name="imgupload4" onchange="readURL(this,'img4');" class="btn btn-primary col-md-7" />
                                                <input type="button" id="btnimg4cencal" onclick="removeimg('img4','imgupload4')" value="Cancel" class="btn btn-danger col-md-4 pull-right" />
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                </div>

                            </div>
                    }
                       </div> 
            </div>
        </section>
        </div>
<script src="~/Scripts/adminlte/components/datatables.net/js/jquery.dataTables.min.js"></script>

@if (ViewBag.Message != null)
{
    <script type="text/javascript">
        window.onload = function () {
            debugger
            alert("submited successfully");
            window.location.href = "/Models/Index/";
        };
    </script>
}

<script>
    $(document).ready(function () {
        $("#DateofPurchase").datepicker({
            dateFormat: "dd-mm-yy",
            changeMonth: true,
            changeYear: true
        });
    });

    function removeimg(img, fileupld) {
        debugger;
        document.getElementById(img).removeAttribute('src');
        document.getElementById(fileupld).value = "";

    }
    function readURL(input, id) {
        //alert(id);

        if (input.files && input.files[0]) {
            var reader = new FileReader();

            if (id == 'img1') {
                reader.onload = function (e) {
                    $('#img1')
                        .attr('src', e.target.result);
                };
            }
            if (id == 'img2') {
                reader.onload = function (e) {
                    $('#img2')
                        .attr('src', e.target.result);
                };
            }

            if (id == 'img3') {
                reader.onload = function (e) {
                    $('#img3')
                        .attr('src', e.target.result);
                };
            }
            if (id == 'img4') {
                reader.onload = function (e) {
                    $('#img4')
                        .attr('src', e.target.result);
                };
            }
            reader.readAsDataURL(input.files[0]);
        }
    }

</script>
